services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  test-db:
    image: postgres:15-alpine
    container_name: postgres-test
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: test_db
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9000:9000' # S3 API
      - '9001:9001' # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  minio-client:
    image: minio/mc
    container_name: minio-ui
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb local/${MINIO_BUCKET} || echo 'Bucket already exists';
      # IMPORTANT: set the bucket policy to public so GET requests succeed
      mc policy set public local/${MINIO_BUCKET};
      exit 0;
      "

volumes:
  postgres_data:
  test_postgres_data:
  minio_data:
